<nlog xmlns:xsi="http://www.w3.org/2001/XMLSchEmaila-instance"
      xmlns="http://www.nlog-project.org/schEmailas/NLog.xsd">

    <variable name="LogfileDirectory" value="${currentdir}\Logs"/>
    <variable name="LogfileName" value="boomiCommand"/>
    <variable name="LogfileExt" value="Log"/>

    <targets>

        <target name="Logfile" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
            <target name="LogfileS" xsi:type="File"
                    fileName="${LogfileDirectory}\${LogfileName}.${LogfileExt}"
                    createDirs="true" archiveFileName="${LogfileDirectory}\${LogfileName}.{#}.${LogfileExt}"
                    archiveEvery="Day"
                    archiveNumbering="Rolling" maxArchiveFiles="10"
                    layout="${longdate}|${level:uppercase=true:padding=-5}|${threadid:padding=4}|${logger:padding=-15}|${message}|${onexception:${NewLine}EXCEPTION\:${exception:format=tostring}}"/>
        </target>

        <target xsi:type="ColoredConsole" name="ColoredConsole" layout="${logger:padding=-15}: ${message}" />

        <!-- write to the void aka just remove -->
        <target xsi:type="Null" name="blackhole"/>
    </targets>

    
    <rules>
        <!-- All information goes to the log file -->
	    <logger name="*"            minlevel="DEBUG"  writeTo="Logfile" />
        <!-- ConsolePrinter message have been printed already -> console out -->
        <logger name="*.ConsolePrinter"                     writeTo="blackhole"         final="true"/>

        <!-- The Console.Host - during startup - uses the console, too. -->
		<logger name="Console.Host"     minlevel="INFO"     writeTo="ColoredConsole"    final="true"/>
        
        <!-- Explicitely trace MSPro.CLArgs and other messages 
		-->
		<logger name="MSPro.CLArgs.*"   minlevel="INFO"     writeTo="ColoredConsole"     final="true"/>
		<logger name="*"                minlevel="WARN"     writeTo="ColoredConsole"    final="true" />
    </rules>

</nlog>